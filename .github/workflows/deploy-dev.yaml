name: CI/CD - Deploy insurtech-factory-front-dev to EKS

on:
  push:
    branches: ["develop"]

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: ap-northeast-2
  CLUSTER_NAME: insurtech-eks
  NAMESPACE: dev
  DEPLOYMENT_NAME: insurtech-factory-front-dev
  CONTAINER_NAME: insurtech-factory-front-dev
  REPOSITORY: 699475927546.dkr.ecr.ap-northeast-2.amazonaws.com/insurtech-factory-front-dev
  IMAGE_TAG: dev-${{ github.sha }}-${{ github.run_number }}
  DOCKER_FILE: Dockerfile
  BUILD_ENV: dev
  PROJECT_NAME: insurtech-factory-front-dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker image to ECR
        run: |
          docker build --build-arg BUILD_ENV=$BUILD_ENV -f $DOCKER_FILE -t $PROJECT_NAME .
          docker tag $PROJECT_NAME $REPOSITORY:$IMAGE_TAG
          docker tag $PROJECT_NAME $REPOSITORY:latest
          docker push $REPOSITORY:$IMAGE_TAG
          docker push $REPOSITORY:latest

      - name: Cleanup Docker local images
        run: |
          docker rmi $REPOSITORY:$IMAGE_TAG || true
          docker rmi $REPOSITORY:latest || true
          docker system prune -f

      - name: Setup kubectl and update kubeconfig
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl && sudo mv ./kubectl /usr/local/bin/
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Set image and apply to Kubernetes
        run: |
          kubectl set image deployment/$DEPLOYMENT_NAME \
            $CONTAINER_NAME=$REPOSITORY:$IMAGE_TAG \
            -n $NAMESPACE

      - name: Rollout status check
        run: |
          kubectl rollout status deployment/$DEPLOYMENT_NAME -n $NAMESPACE --timeout=5m

      - name: Cleanup kubeconfig
        run: |
          rm -rf ~/.kube/config
